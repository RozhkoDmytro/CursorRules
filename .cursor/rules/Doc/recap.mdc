---
alwaysApply: false
---

* Generate a git changes recap for the current branch compared to \[BRANCH\_NAME].
* Work commit-first: treat each commit as one feature; merge only if commits clearly belong to the same task.
* For each feature, always produce four sections (content in English only):

  1. 🎯 What was implemented and why — describe the business problem and result in 2–3 sentences.
  2. 🔍 Change logic and architectural decisions — 1–3 bullets with short code snippets (≤6 lines) plus rationale.
  3. 🚀 How to use (examples) — CLI/UI/API usage examples. For APIs, always include curl with method, URL, headers, minimal JSON, and expected status.
  4. 🔧 Technical details — bullets covering endpoints, DB schema/migrations, events/queues/crons, feature flags, roles/permissions, env vars, caching, retries/timeouts, key packages.
* Enforce concise style: each bullet ≤12 words, no filler or vague adjectives.
* Never output file listings or raw diffs; reference files only when needed for logic explanation.
* If a fact is missing, output "N/A" instead of guessing.
* End with a **PR Summary (EN)** containing exactly five bullets:

  1. Problem — one line.
  2. Approach — one line.
  3. New components — comma-separated list.
  4. Risks and mitigations — one line.
  5. Testing and verification — one line.
* Keep recap scannable: prefer bullets, limit paragraphs to ≤3 sentences.
